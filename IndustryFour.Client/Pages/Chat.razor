@page "/"
@page "/chat"
@inject IHttpClientFactory ClientFactory

<PageTitle>Playground Chat</PageTitle>

<div class="container mt-4">
    <h1>Chat</h1>
    <form id="input-form">
        <div class="mb-3">
            <label for="input-prompt" class="form-label">Enter your prompt:</label>
            <input type="text" class="form-control mb-4 m-auto" id="input-prompt" @bind="Question" />
        </div>
        <button type="button" class="btn btn-success" disabled="@IsTaskRunning" @onclick="Click">Submit</button>
    </form>
    <div class="mt-4" id="input-result">
        @if (Answer is not null || Error is not null)
        {
            <p style="white-space: pre-line">@Answer</p>
            <pre>@Error</pre>
        }
    </div>
</div>

@code
{
    private string Key { get; set; }
    private string Question { get; set; } = "What role did ignition play in the unified namespace?";
    private string Error { get; set; }
    private string Answer { get; set; }
    private bool IsTaskRunning { get; set; }

    private async Task Click()
    {
        IsTaskRunning = true;
        Answer = "Processing...";
        Error = null;

        // Forces a render
        await Task.Delay(1);

        await OnPromptSubmitted();

        IsTaskRunning = false;
    }

    private async Task OnPromptSubmitted()
    {
        try
        {
            var client = ClientFactory.CreateClient("BaseApiUrl");
            Answer = await client.GetStringAsync($"embeddings/answer?question={Question}");
        }
        catch (Exception ex)
        {
            Error = ex.ToString();
        }
    }
}