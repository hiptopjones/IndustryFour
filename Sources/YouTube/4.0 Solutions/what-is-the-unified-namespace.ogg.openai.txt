I-I-O-T, the Unified Namespace, take zero. All right, so in this video, we're gonna go over a concept that we refer to all the time in our videos, which is the Unified Namespace. So I get two questions. Number one, what is the Unified Namespace? And number two, what does it look like? How do you build the Unified Namespace? Where does it live, okay? So I'm gonna talk about the arc, why the Unified Namespace matters first, okay? Number one. In previous videos, we've touched on this. If you guys are familiar with the automation stack, right? The way that data used to fly up the, go up the stack, we had multiple connections, discrete connections between disparate applications. So what does that mean? In the industry 3.0 days, I would have data come from the PLC that would go to the HMI that would then be passed to the SCADA system or it would go from PLC to SCADA. SCADA and MES would interact. Only the two of them would interact. And the ERP system would occasionally interact with the MES system, okay? If at some point I wanted to get information from the ERP system into the SCADA system, I would have to do two things. I would have to connect the ERP system to the MES system, whatever specific new data the SCADA system wanted, and then I would have to map it from the MES system to the SCADA system, okay? So what ends up happening is as my organization grows, I end up having thousands, tens of thousands, hundreds of thousands connections between various nodes in my system, okay? In order for us to be able to scale, and that is scale and enterprise implementation, in order for us to fully leverage IIoT and Industry 4.0 concepts and digitally transform a business, then what we have to do is change this bastardization in terms of the way that we connect applications together. We do that by creating unified namespace, all right? So what we do is we treat all applications, we treat everything in the plant and on the plant floor as a node in the system, all right? So what ends up happening is our PLCs publish their data into a unified namespace, okay? The SCADA system and the HMI, well, we actually have a discrete connection here, but the SCADA system and the HMI get their information from the unified namespace. The SCADA system may process it and then post that information back into the unified namespace, okay? The MES system will then grab its information that it needs to do all of its post-processing of data, and it will then publish it back into the unified namespace, okay? The ERP system will then grab its information from the unified namespace, do post-processing and publish back in. Same thing with inventory management, there'll be locations in our namespace for inventory management, warehouse management system, and for cloud and machine learning, okay? The unified namespace is the structure of all of our business data in one place, okay? It is literally the unified namespace is the, it is all data for our entire business in one place, for our entire business in one place for all applications to be able to consume from. So if I wanted to add a new piece of software later on down the road, which was gonna do, let's say, shipping predictions, let's do that. So let's say I wanna create, this'll be our shipping optimization software. I don't even know if this exists. But let's say a new piece of software comes out that is our shipping optimization software, and it needs information, okay? Here's the information that shipping optimization would need. It would need to know information from the ERP system. That is who the client is and where it's gotta get shipped to, okay? That's gonna come from ERP. It's gonna need information from the warehouse management system. It is gonna need information from the MES system. Let's say I don't have the complete order fulfilled. I need to know what is the status of the orders that are in progress right now, okay? So I'm gonna need information from the MES system. I might need information from the edge, okay? Is the machine currently running right now? Is it not currently running right now? I may need information directly from the edge. The shipping optimization software in industry 3.0, we would have to install our new shipping optimization software, and then we would have to build discrete connections between the shipping optimization software and the WMS. Or we would create a whole new database off here that would collect information from all that software so the shipping optimization software can consume it. Or we could use an IOT architecture, and all we would do is just plug our shipping optimization software into our namespace. That could be over web service. It could be over MQTT. It could be over whatever protocol it talks. And we can point it to the information it needs to consume. And then the shipping optimization software can post-process and send it back into the unified namespace. That's the concept of the unified namespace. The most important element of the unified namespace is that it's a stepping stone to get us to the Holy Grail, okay? And what is the Holy Grail? The Holy Grail is that our business processes are closed loop. That is that we can collect information about the state of our business in real time, put it in one location, plug it into the cloud, into our machine learning algorithms. We can plug it into the cloud. Our machine learning algorithms are gonna learn about our business in real time, make predictions or recommendations on how to improve the process in real time, and push back those recommendations. Those recommendations may mean, hey, we've just determined that our PLC code is not optimal, okay? Our scan rates can be improved by 16 or 18 milliseconds per scan. If we make these three changes to the code, machine learning could spit that back into the unified namespace and push it to the edge in real time. The machine learning could push back into the unified namespace and push it to MES in real time in terms of, hey, let's go ahead and break this worker order out into three separate production runs and run them on these other two machines. There's a whole host of things that we're trying to accomplish with machine learning that we can't even begin to do until we generate the unified namespace, okay? So not only is it incredibly efficient, I mean, this is the most, this is the optimal way to architect your business infrastructure. It is the step that you need to ultimately get to this holy grail, which so many companies are investing millions and millions of dollars in machine learning and AI, and they're wondering why their projects are failing. Well, I'll tell you, I'm gonna tell you why your projects are failing right now. You need to listen to this. They're failing because you don't have this. So what's happening is that you're bringing in really, really smart people like our engineers, like the Accenture group, like a whole host of other companies out there that do machine learning, and you're saying, I wanna stream dimensional data and MES data into my cloud, into my machine learning algorithm. Well, you know what you're doing? You're taking the PLC, a PLC, you're connecting it to, you know, AWS Greengrass instance that's running a Lambda function to normalize the data. So this one PLC streams up into the cloud. You're then making an explicit connection between your MES system and your machine learning algorithm. You're actually doing explicit connections for every single node you have in your organization. You're not taking the MES data and the PLC and putting everything into a unified namespace that where as I add new nodes and as I take nodes away, they just disappear from the namespace, okay? The namespace is the digital twin of your entire business. It is literally the visual representation, think of it as in a leaf node architecture, in a folder structure, in a file share structure, that's what it would be familiar, that's what it would look like to most people, of your entire business in real time. Imagine that you could go to your corporate file share, and I could click on a folder that's called corporation and our enterprise, and then I can click on a folder for every plant I have, and inside that folder, I can click on another folder for every single node I have, for every piece of every application I have. And when I get down to the root of the, or down to the inside the folders, I can see all of the real data inside those folders. That's what the unified namespace is. Right now you have a namespace here, here, here, here, here, here, here, and there, and in every other application, and you can't scale that into an IIoT application until you normalize it. And you gotta do that through a unified namespace. So anyway, that is the concept of the unified namespace in IIoT, and it's a quick touch on why it ultimately matters. But what I can say is this, there are two reasons we have to do this, we all have to do this. Number one, we can't scale enterprise applications when we're doing explicit connections between software. There's just no way. It literally isn't possible. It takes two years to do the ERP, the MES, the MES explicit connection for one plant. How are you gonna do that for an entire business? Okay, number one. Number two, we can't get to the Holy Grail until we have this, okay? Excellent. It means business, right? So good. Thank you! Thank you, Mark for that great presentation today! Take care! Thank you! Thanks, guys. Thank you all so much for watching! Take our interviews, check out each other's YouTube channels. And as always, thank you for watching! See you guys later. Ciao! Ciao! Ciao! Ciao! Ciao! What the heck did I say?