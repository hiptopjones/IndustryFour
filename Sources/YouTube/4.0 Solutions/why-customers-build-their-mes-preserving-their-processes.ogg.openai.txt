Why is it organizations build their MES rather than buy it off the shelf? Take part two, take zero. All right, so if you guys watched the last whiteboard video, which was two weeks ago, and you can check out the link here or here or whatever, if you watched that video a couple of weeks ago, one of our solutions architects reached out to me and said, you know, hey, Walker, that was a really awesome whiteboard video. And it got me thinking, you should do another video and you should explain an actual example of a solution that we built for a customer that they would not have been able to buy off the shelf. So what I've decided to do is in this video, I'm actually going to go through that example. All right, so a quick reminder, you know, the manufacturing workflow, organizations, they sell stuff in their CRM, they plan to manufacture in their ERP, they execute the manufacturing in the MES layer, they monitor and control their plant in the SCADA layer, they monitor and control machines on the plant floor, they inventory their stuff, they ship their stuff, and they sell their stuff and they buy their raw materials. In the case of this client that we're going to talk about today, the client has a CRM that's unconnected. So I think they were using, it doesn't matter what they were using, but they were using a really basic CRM. Their ERP functions plus ARAP plus all their inventory was homebrew. And here is a really important concept. The competitive advantage that this client has is based in the way that they structured their enterprise resource planning. So the triggers, the events, everything that they built in their ERP system is what gives them their competitive advantage in the market. And so if what you were going to do is try to buy a manufacturing execution system off the shelf and try to plug it into their homebrew ERP system, you'd be shit out of luck. There'd be no connector to connect to their homebrew ERP system. Moreover, if what you were to do is just go get SAP and pull it off the shelf, SAP wouldn't be able to be configured for this client. On the plant floor, so at the MES layer, they were all paper. And the center of the universe for this organization was a job jacket, a very advanced paper manufacturing execution system. And then on the plant floor, they had incredibly advanced PLC, HMI, primarily Siemens D445 motion controllers running most of their assets. Super advanced PLC, HMI, primarily Siemens D445 motion controllers, and then some flavors of Omron. So one of our architects, he actually sends me this message in Teams after the last whiteboard video, and he says, hey, you really ought to talk about this specific use case for this client that we built their manufacturing execution system in. So what the customer needed was production scheduling. Most of this is abstracted because it's obviously client data. We don't want you to be able to see any of the important stuff. But what you're looking at here is their paper scheduling board that their operations team uses on the plant floor. And then you have the printed out schedule right here. And then what they ultimately wanted was a digital scheduler that would integrate into their manufacturing execution system, which we were building in parallel with the Core 4. So the goal here is to take the center of their universe, which is their job jacket, this fancy scheduling board that they've got in their supervisor's office, this piece of paper that's printed out on engineering paper that says, here are all the jobs that we're going to run in order. And what we want to do is we want to integrate that into a enterprise class MES system. So how are we going to do that? Well, what we're going to do is our goal is to take the job jacket that we have up here in the upper left-hand corner, which is their center of their universe. I'm going to kind of explain why this is so valuable for them. We're going to take the scheduling board that they have in the supervisor's office, which has many of these job jackets. We're going to take this printed copy that the supervisor carries around the organization, and we're going to build it. And we're going to build it in conjunction with a manufacturing execution system similar to what I talked about in the last whiteboard video. So in order for us to do that, we're going to do the Core 4 plus custom. So I'm going to sketch out at a high level, maybe 5,000-foot view, how this is all going to piece together. So in a Core MES system, the center of the universe is going to start ISA95. So I'm going to end up with tables for enterprise, site, area, line, and sell. So this is going to structure my business. Then what I'm going to do is I'm going to have tables for work orders. I'm going to have a schedule table, and I'm going to have a run table. I'm going to create work orders. Work orders in the MES system, in the MES world, equals job jacket at this customer. We're going to take a work order, we're going to schedule it, and then an operator is going to start it as a production run. And what we want to be able to do is take their existing business process, not redefine it, not try to change the way their business process operates just so it fits in some off-the-shelf MES system. We're going to try and make it work for them. So our goal is to connect. What we want to do is we want to, using MES custom, so using some MES custom schema or database, what we're going to do is we're going to create all the custom elements for this customer. So what we're going to do is we are going to create a job jacket. That's what they called it. They called it a job jacket. And then we'll have, tied to the job jacket, we'll have all of the specifications for the job jacket. And then there will be another section that's going to handle all of their events. And this is a really important piece. I'm going to go back here real quick. Part of the thing that makes this business so competitive in their industry, and the reason they're able, they're a smaller manufacturer, but they compete with enormous manufacturers and kill them in the market. The reason why is the brilliance of their manufacturing workflow. And it's all centered around this job jacket concept. But essentially, there are a series of events. We call them manufacturing steps in the ERP world. But there are a series of events that they track on paper. They're triggers. And if I get through this manufacturing step, I can then move on to the next manufacturing step. The problem is they're not linear. Some of them happen in parallel. So a trigger, the trigger for the second step may happen halfway through the first step. Okay? So what we have to do is be able to incorporate that into our digital system. All right? And so what we're going to do is we're going to start out with our MES Core 4. And so for those of you who are in the Core MES Bootcamp, so if you guys were in the original Core MES Bootcamp, this schema is the ISA-95 schema for manufacturing execution systems. And this is exactly what we taught you how to build. So what we did here was we did work order schedules and run. And then what we did is we had histories. So we have count history. And we have state history over here. And what we do is we have an OE engine. We have an OE engine that runs. It goes and grabs all the events that we've stored based on the structure of our organization. And then we can calculate OE by work order, by schedule, by production run, by asset, et cetera, et cetera, et cetera. What we're doing is we're extending that here with the blue stuff and tying their existing job jacket system into this Core 4 manufacturing execution system, something you just can't do with off-the-shelf software. Okay? All right. So what does it look like when we're all done? Okay? Well, the first thing that we have to do is we also have to tie this into a unified namespace. So now what I've got is a schema in the back end. We've got our schema, which we've built out. And then what we do is we build out our unified namespace, which is a representation of our schema. You guys won't be able to see it very clearly on here because there's obviously protected information. We made this all blurry. But in a nutshell, what we have here is the ISA-95 structure. Okay? What we have here is all of the real-time automation data from the edge, from all the smart stuff on the plant floor. And what we have here is a combination of our unique custom elements in the namespace and the Core 4 MES elements here. So real-time specification data and our MES and OE data from ERP and the MES engine. All right? So that's how the unified namespace plays here. Everything I'm going to show you subsequently coming out of this, so the back end that drives all the event management and transactions is here. The definition that's going to go ahead and create digital job jackets and tie them into the Core 4 MES system is there. The unified namespace that puts it all together so that all consumers in our organization can interoperate with that data seamlessly, publish and consume seamlessly, is structured like this. And here are the results. All right? So the first thing we have is we have a digital job jacket. This digital job jacket, what we're looking at here on the screen here, is the exact same thing that you saw a couple of slides earlier. We have the exact same events that make this organization valuable and gives them the ability to manage really low-volume work orders and do changeover super, super quickly and still be profitable right here. Those events are tracked here in the blue area. So you have definitions plus event storage, transaction storage. So we've got a digital job jacket. This digital job jacket, all the stuff that we have in here, comes from their homebrew ERP system, and it is manifest through what it is that has been custom built in this Core 4 MES system. So we have a job jacket. And because we have a job jacket, now what we have is a digital job board. So instead of having a physical board with a bunch of pieces of papers on it, now we have a digital one, and that digital one is connected to the manufacturing execution system. So now when we run a production order, so when I start a job on a production line at this specific client, I'm not starting a work order in the MES system. I'm starting a job jacket in their ERP system, and I'm mapping it to a work order in the MES system. And the job jacket ID is the work order. It is not some abstracted work order from my Wonderware MES system. It is not some extracted work order from my Traxxas MES system. It is the job jacket ID from their ERP system. Nothing has changed in terms of the way that their business operates. Their operators didn't have to learn anything new. What they used to physically interact with in terms of paper and a board in a supervisor's room is now just a digital interaction that they interact with on a dashboard at the production line and in the supervisor's office. So now what we have is the digital schedule or digital job board. What we've done is we've added in color-coded states. So now instead of them walking up to the physical pieces of paper and looking at the checkboxes, now what they can do is from a distance they can see the status of each of these individual jobs, including each of those events which make this organization so incredibly valuable. And that is in terms of them being able to streamline their manufacturing processes. So we've got the job drawer, and now what we have is a digital scheduler. So the jobs here are a manifestation of this digital schedule. So when I go back and I look at the job jacket, which is on the job board, which is located there, when I'm looking at it on the schedule, what I'm doing is I'm looking at it connected to our Core 4 MES system. This extended custom element, which is job jacket, which is a direct digital manifestation of what they already had on the plant floor, their existing business process, is now connected to what it is we know as manufacturing execution scheduling. And so when I look at my scheduler, I'm looking at my scheduler. This is a MES scheduler that is scheduling their job jackets, which are extended customized. And so then the last thing that we want to do is we want to take data that they have on the plant floor, so some raw data that comes off of their individual equipment. So what you're looking at here, and I don't know if you guys can see it, but what we're looking at here is historical job jackets. So this is because they were using the existing job jacket system, every time an operator would start a production run, they would type the job jacket ID into the HMI on their machine, and it would be stored in a SQL database on the machine. And that data was never used. Basically what they would do is that machine, the asset, which is a $25 million asset, would collect process data over time, over the course of time while the production run was running. They would type the job jacket in, and then the machine itself would collect process data. So for example, what we're looking at here is we're looking at a deck temperature set point, the actual deck temperature, the tunnel temperature here, the tunnel temperature set point, and the tunnel temperature. So what we're looking at for this job jacket, we're looking at here is history that had been collected for like the last 10 years before the digital MES system had ever been built. And if what we had done was put by an off-the-shelf MES system, and we don't keep the job jacket structure of the business, which makes them valuable, we would never be able to tie the historical process data seamlessly to the new digital MES system. But we were able to do that simply because we didn't change the way the business operated. What we did was we digitally transformed the organization. Through a combination of digital transformation and a combination of digitization, which is what we did with the job jacket. So now what I've got here is I could go back, just by virtue of building this, what we could do is we could say, I want to look at all the jobs I've run over history on this machine using this product code. The product code's tied to the job jacket. And I want to look at the process history. And this was a game changer for this organization. Because overnight, by us custom building this MES system, what they were able to do was just select a row and look at, so this job jacket was run, if you look at the dates, July 31st, 2019, August 1st, August 2nd, August 2nd, August 3rd, August 4th, August 5th. And it goes all the way, this is one of the most common product codes. It goes back like 10 years. And all they had to do was select a row and they could just scroll down and they could look at how operators set up the machine differently over time relative to the way they set it up now for the same product. That is visibility they had absolutely, they had no visibility into that. And if we hadn't custom built the job jacket function, they would have never been able to connect that data together. So what did it look like in the end? Classic MES, right? We have work order information up here in the upper left-hand corner. Work order in this case equals job jacket, but it looks like work order. We have overall equipment effectiveness, in this case based on production run. We have all of our downtime events. Plus we have run chart, production, Pareto, run notes, schedule. And then we have the individual custom process data on the plant floor here, including pivoting by job, job jacket. So all the data that I'm seeing here is an extension of the core MES system, but it's pivoted on their job jacket system. This is another view. They added a second custom view. What they wanted to do was look at that process data that they had learned about when we analyzed the data based on job jacket. If we go back here, when they looked at this process data here, what they decided was, well, we want to collect all of this process data, not in that database on the machine anymore. What we want to do is we want to collect that in a historian, an enterprise historian at the site. So we installed Canary, and we took the values that we were plotting, that the machine had already been plotting in a database, and we started plotting them in a Canary historian, and then showing those process data points in the lower right-hand corner. So that was a step three of the progression. Also, they wanted mobile. They wanted their operators, their supervisors. They wanted everyone to be able to access this data mobile. Also, they wanted mobile. So they wanted to be able to access all of this data on iPads, on cell phones. They wanted to be able to access it from home. They wanted to be able to access it from the plant floor. So what we're looking at here is the same concept, OEE upper right-hand corner, order information upper left-hand corner, all the downtime events here, and all of the data that we're seeing here is based on the active order, which is tied directly to the job jacket, which ties them directly to their homebrew ERP system. And when it was all said and done, I want to come back here. That first integration, the first integration that got us to this initial point here, with this view into OEE and job jacket status, with that scheduler, with that scheduler board, and with that job jacket there, based on this architecture right here, that initial delivery was just in the proof of concept on one machine. And the customer didn't pay anything for it. That was a free proof of concept that I paid for, so that we could prove the viability of doing this. That, hey, instead of spending the $800,000 that you've been quoted on your manufacturing execution system, why don't you just, why don't we do this? Give me access to this machine, just this one asset. Let us show you how you should do it. You should build your MES system. Don't make the mistake everyone else is making and try to buy off the shelf and then realize the limitations. Give us access to your machine. We'll build it for you, and I'll do it for free. Okay? Two caveats. Number one, we do whatever we want. You have no say in what we deliver. We're going to show you what's possible. Okay? Number two, if you like it, you buy it, and you do the rest of the facility, or we just take it out. All said and done, everything that you just saw here was all done in about 12 weeks, start to finish, including integration of every asset. So every asset in terms of data integration from the plant floor was integrated, but we only did manufacturing execution, job jacket, scheduling, and unification on one asset, which was a big $25 million asset. And the focus was focused on a high-value return. At the end of the day, once the organization looked at that integration, and they said, we want the whole thing. And later on, we continued to iterate. We built their art management system. We built manufacturing execution plus ink management. You name it. The entire organization, the entire organization, completely operates through one single pane of glass. That is Quadrant's core MES, job jacket management, scheduling, ink management, art management, CRM, ERP. And the last thing that we did about two years in was order entry. So all the orders that create the job jacket was all fully digitized as well, and almost of that was converted from an Excel spreadsheet. Had this client not made this decision, they would have ultimately had to make this decision a couple years down the road, but they would have made the mistake that most people make, which is they spend $500,000 to $800,000 or a million dollars on an off-the-shelf solution that only gets them 60% to 70% of what they want and makes them choose between that which already makes them competitive in the market, the unique elements of their business. They have to choose between that or getting 100% of somebody else's solution. That is making my business fit into someone else's platform. And this is the reason that people end up building MES. All right, so with that, I'm going to answer some questions from Discord here in a second, but whether we include those questions here or whether they're separate videos right now, like, subscribe, comment down below, yada, yada, yada, and we'll see you in the next one.