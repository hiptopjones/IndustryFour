What is our typical IAOT infrastructure take zero? I'm going to define IAOT again, right? The Industrial Internet of Things is the idea that we get all information and data in the hands of the people who need it, when they need it, and where they need it. So that's the typical IAOT infrastructure. Our goal is, when we talk about an IAOT infrastructure, this is the infrastructure we have to put in place in order to meet that goal of putting the data and information that people need in their hands, when they need it, and where they need it. This is a typical IAOT infrastructure for a project that we work on, okay? And this is not all inclusive, it's just typical, all right? So I'm just gonna kinda go over some of the components. So we've got a couple of legacy PLCs in our facility. So for an IAOT project, what are we generally trying to do? We are generally trying to digitally transform an entire enterprise, and we start by digitally transforming one plant, one facility, all right? So this would be, we're in a single facility, all right? The stuff that they already have in place, generally they're gonna have a couple of legacy PLCs, maybe an OPC server, and maybe a SCADA system. They may also have a CMMS. A CMMS is a maintenance management system. So I think people make this way more complicated than it needs to be. But think of it as the maintenance management system is the piece of software that you use to open and close work orders for your equipment. A machine breaks down, I need to open a work order to get a mechanic or an electrician to come out. That a mechanic or an electrician may need some type of work instruction to fix the problem. He may need to order parts. He may need to retrieve those parts from a cage. That's what the maintenance management system does, okay? They probably have some type of legacy CMMS system in there. Infor is a really popular one, and when I say legacy, it's a really good CMMS. So they probably have a maintenance management system. They probably have a warehouse management system. So what is a warehouse management system? Basically, it's inventory control. It is, what are all the bin locations in my warehouse? What inventory do I have in that warehouse? How much is on hand? That's what a warehouse management system is. And then they have an ERP system, and we can guarantee they have this, even if it's just QuickBooks. ERP stands for Enterprise Resource Planning Software, but what it really is, it's the accounting home for your business. It's what are all the assets that I have? What's the cost of goods sold? Sometimes, what is our current inventory? What are all the products that we make? And the ERP system generally will have asset IDs for each piece of machinery that you have, okay? So they generally have an ERP system. They also have some type of database, right? I mean, everyone's using some type of SQL database, and they may have a SCADA system. Here's what we add. They may have IIoT-supported PLCs, HMIs, and sensors, okay? So that is a sensor that's a smart sensor that can report its information to an MQTT broker without having to be wired into a PLC and then routed through an OPC server. Cuz remember, this is all pull response, it's legacy technology. So they may have smart sensors, or we may install them. They may have smart HMIs, or we may install them. And they may have IIoT-supported PLCs, or we may install them, okay? So the first thing that we generally put in place, if we're gonna use MQTT as our IoT infrastructure, is we're gonna put a broker in, okay? And basically what that means is all the stuff that supports MQTT is gonna publish into our broker, all right? The other thing that we're gonna do, and hopefully their OPC server is Kepware, because Kepware does support MQTT. Using the IoT gateway, what we will do is we will configure this to publish all of its information into a broker, okay? So just by pointing the IoT gateway into our MQTT broker, we now have all the namespaces, all the information for the sensors, HMIs, and PLCs, all the information for these PLCs, which are housed in the OPC server, living inside this broker, okay? The one thing we'll have trouble getting a hold of is this information in the SCADA, which would generally be things like alarm information, that kind of stuff, okay? Then the thing that we add in is we're gonna add in the technology that we're gonna use to generate our unified namespace, cuz all of our applications are gonna consume and produce data from this unified namespace. So that means MES, which we'll add in, the Manufacturing Execution System. We may almost certainly replace the SCADA system so it can talk to this unified namespace, okay, the SCADA system. We may add in things like machine learning. We may add in a data lake from the cloud. The next thing that we're gonna do is we're gonna connect this broker to our unified namespace, okay? So I wanna explain what that namespace looks like real quick. So we generally use the ISA 95 standard, which is Enterprise Site Area Line. So for each node in our system, MES, SCADA, our data lake, our CMMS, our Warehouse Management System, our ERP, and our SCADA system, we have a location inside of our unified namespace for the data from that information, and I'm gonna get more technical than normal here. One of the biggest challenges of having a single source of truth in a plant, in a business unit, or in an enterprise is every one of these pieces of software that you buy off the shelf has its own namespace, and this is what I mean. Let's say I have a machine, a line, I've got a single-celled machine, machine one, that has, all it has is PLC on it, okay? That machine consumes raw materials and it spits out finished goods. This machine, machine number one, is gonna be an asset inside of your ERP, and there is going to be an asset ID. So just like your area is gonna have an asset ID inside of your ERP. If we're using SAP, for example, your enterprise may have a number like 1,000, and that's its ID inside of the ERP system. And the site may have an ID something like this, 1,000-451 is the SAP number. And then the area itself might have another, you know, say 451-01, and then the line is gonna have an asset number, okay? And we'll say the asset number is 3131, okay? That's inside the ERP system. But let's say I add my machine into the CMMS, so into my maintenance management system, so that I can open work orders to get that machine fixed. Well, when I connect this machine to the CMMS, the CMMS is going to create an ID for that asset. It's not going to use the same asset that's inside the ERP system, because unless you're using SAP's CMMS, these won't even talk to each other, unless you build some middleware layer and join all the data together, which most executives, when they're looking at building and, you know, digitally transforming the business, they never even consider that cost. The same thing will happen with the warehouse management system. In the warehouse management system, this machine is gonna become a location. Why? Because you're gonna move raw materials from your warehouse out to this machine, and someone may wanna know where were those raw materials moved to. So this is also gonna have its own ID inside the warehouse management system, okay? When you build out the SCADA system, so your SCADA, Supervisor Controlled Data Acquisition, all of your alarms and all your process control, inside the SCADA system, believe it or not, when you organize all your tags from the PLC, there are underlying IDs related to that machine and all of its tags. And they will be a completely different ID number. So when we wanna merge all that information together, if I wanna get maintenance information, downtime, uptime, all that MES information, I wanna get raw material information, I wanna get costing information, and I wanna look at real-time alarm management for just one machine. Before I have unified all the data, I gotta get it from here, here, here, here, here, and here, all with different IDs. I gotta merge that together. And let's say I wanna build a simple report using the existing structure. Let's get rid of our unified namespace. You have to pay an engineer to merge all that stuff together, okay? So the reason we use MQTT is because we are able to generate this unified namespace seamlessly. And here, I'll show you how we do that. The PLC is gonna get what's known as a node ID. The HMI is gonna get a node ID. And the sensor is gonna get a node ID. And it is a unique ID. Only one node in the entire unified namespace has that ID. And it is going to get, essentially, a command. Like, when we give it its node ID, we're gonna give it a parent path. We're gonna say, this PLC belongs to this line. So I want you to publish into this topic. Enterprise, you know, 1000 forward slash 1000-451 forward slash 451-01 forward slash my node ID. And anything with that node ID, any information with that node ID is gonna get published exactly inside the namespace where it belongs. And if it's coming from the PLC, it's gonna be all that sensor data. But let's say the ERP system needs to consume, oh, let's say the CMMS system. The CMMS system needs to consume some of that sensor data. Hey, I've got a sensor that we know breaks down every 1,000 run hours. The CMMS system can now, just by subscribing to that sensor data, it can now consume the runtime hours on that sensor, generate a work order, and publish back into that exact same space in the namespace. But by giving it its own unique node ID, we will get a CMMS sub namespace inside this path. So the CMMS system is able to consume from anything that's in that namespace and publish back into its own unique location. So the CMMS can consume just that sensor data and then publish back into a directory called, we're just using CMMS, publish back into a directory called CMMS, which could be a dataset that tells us, hey, here are the four sensors that need to be changed in the next shutdown, that kind of thing, right? So this is the typical IIoT infrastructure. The reason we build it this way, the reason we construct it this way, this is all the original stuff, this is the stuff we add in. The reason we construct it this way is so that we can build this, the unified namespace, which is the single source of truth for all of your data. And the reason it's so important, the reason it's so important, and we talk about this all the time, disparate systems. One of the number one things that executives will tell us is, hey, we have all these disparate systems. I've got, like, really important information in my ERP. I get important information in the WMS. I got one in the CMMS. But I'm tired of having to go to all these different systems to kind of collate all the data into the information I need to make decisions. And if you watch the previous video when we built those dashboards, the only way that you could build that in real time, truly digitally transform, fully leveraging IIoT, is using a unified namespace like this. So we construct this type of infrastructure. I want to finish one little quick thing. Our unified namespace is also going to connect to any of our existing databases, right, so any of that old legacy data. We want to be able to connect to that database, right? So our unified namespace through this database could also pull back any historical alarm data for any equipment, for anything that happened prior to us getting there, right? From the start, what we're doing is we're looking at what is originally there, what does the customer currently have, what do they ultimately want to achieve, and then what do we have to add to get to this point where we have that single source of truth for the data? Before we ever build a visualization, before we ever build a report or ever build a dashboard, the first thing that we're trying to do is get to this point right here.